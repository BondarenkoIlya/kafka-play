version: '3'

services:
  kafka-play:
    container_name: kafka-play
    build: .
    image: kafka-play
    ports:
      - "8080:8080"

  zookeeper:
    image: zookeeper:3.4.9
    # ZooKeeper is designed to "fail-fast", so it is important to allow it to
    # restart automatically.
    restart: unless-stopped
    # We'll expose the ZK client port so that we can connect to it from our applications.
    ports:
      - "2181:2181"
    volumes:
      - ./volumes/zookeeper/data:/data
      - ./volumes/zookeeper/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:4.1.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      # Required. Kafka will publish this address to ZooKeeper so clients know
      # how to get in touch with Kafka. "PLAINTEXT" indicates that no authentication
      # mechanism will be used.
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      # Required. Instructs Kafka how to get in touch with ZooKeeper.
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      # Required when running in a single-node cluster, as we are. We would be able to take the default if we had
      # three or more nodes in the cluster.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./volumes/kafka/data:/var/lib/kafka/data
    # As Kafka relies upon ZooKeeper, this will instruct docker to wait until the zookeeper service
    # is up before attempting to start Kafka.
    depends_on:
      - zookeeper

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:4.1.0
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      # Specifies the ZooKeeper connection string. This service connects
      # to ZooKeeper so that it can broadcast its endpoints as well as
      # react to the dynamic topology of the Kafka cluster.
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      # The address on which Kafka REST will listen for API requests.
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      # Required. This is the hostname used to generate absolute URLs in responses.
      # It defaults to the Java canonical hostname for the container, which might
      # not be resolvable in a Docker environment.
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      # The list of Kafka brokers to connect to. This is only used for bootstrapping,
      # the addresses provided here are used to initially connect to the cluster,
      # after which the cluster will dynamically change. Thanks, ZooKeeper!
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
    # Kafka REST relies upon Kafka, ZooKeeper, and Schema Registry.
    # This will instruct docker to wait until those services are up
    # before attempting to start Kafka REST.
    depends_on:
      - zookeeper
      - kafka

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.3
    ports:
      - "8000:8000"
    environment:
      # Required. Instructs the UI where it can find the Kafka REST Proxy.
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      # This instructs the docker image to use Caddy to proxy traffic to kafka-topics-ui.
      PROXY: "true"
    # kafka-topics-ui relies upon Kafka REST.
    # This will instruct docker to wait until those services are up
    # before attempting to start kafka-topics-ui.
    depends_on:
      - kafka-rest-proxy